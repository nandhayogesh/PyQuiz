@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Jules-inspired design system - Gaming UI/UX with glassmorphism */
    --background: 251 24% 9%;  /* Deep purple like Jules */
    --foreground: 180 100% 70%; /* Cyan text */

    --card: 251 24% 12%; /* Slightly lighter purple for cards */
    --card-foreground: 0 0% 98%;

    --popover: 251 24% 8%;
    --popover-foreground: 180 100% 70%;

    --primary: 180 100% 50%; /* Bright cyan - Jules signature color */
    --primary-foreground: 251 24% 9%;

    --secondary: 280 100% 50%; /* Purple accent */
    --secondary-foreground: 0 0% 98%;

    --muted: 251 24% 15%;
    --muted-foreground: 180 50% 60%;

    --accent: 320 100% 60%; /* Pink accent for gaming feel */
    --accent-foreground: 0 0% 98%;

    --success: 120 100% 50%; /* Bright green for correct answers */
    --success-foreground: 251 24% 9%;

    --warning: 45 100% 60%; /* Yellow for warnings */
    --warning-foreground: 251 24% 9%;

    --destructive: 0 100% 60%; /* Red for wrong answers */
    --destructive-foreground: 0 0% 98%;

    --border: 251 24% 20%;
    --input: 251 24% 15%;
    --ring: 180 100% 50%;

    --radius: 1rem; /* Larger radius for gaming feel */

    /* Gaming-specific tokens */
    --glass-bg: 251 24% 12% / 0.3; /* Glassmorphism background */
    --glass-border: 180 100% 50% / 0.2; /* Glowing border */
    --neon-glow: 180 100% 50%; /* Neon glow effect */
    --neon-secondary: 280 100% 60%; /* Secondary neon */
    --neon-accent: 320 100% 60%; /* Accent neon */

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(180 100% 50%), hsl(280 100% 60%));
    --gradient-secondary: linear-gradient(135deg, hsl(280 100% 50%), hsl(320 100% 60%));
    --gradient-glass: linear-gradient(135deg, hsl(251 24% 12% / 0.3), hsl(251 24% 15% / 0.1));

    /* Animation durations */
    --transition-fast: 0.15s;
    --transition-normal: 0.3s;
    --transition-slow: 0.5s;

    /* Gaming shadows */
    --shadow-glow: 0 0 20px hsl(var(--neon-glow) / 0.5);
    --shadow-glass: 0 8px 32px hsl(251 24% 4% / 0.3);
    --shadow-card: 0 4px 16px hsl(251 24% 4% / 0.4);
  }

  .dark {
    /* Dark mode uses same colors as Jules is dark by default */
    --background: 251 24% 9%;
    --foreground: 180 100% 70%;
    --card: 251 24% 12%;
    --card-foreground: 0 0% 98%;
    --popover: 251 24% 8%;
    --popover-foreground: 180 100% 70%;
    --primary: 180 100% 50%;
    --primary-foreground: 251 24% 9%;
    --secondary: 280 100% 50%;
    --secondary-foreground: 0 0% 98%;
    --muted: 251 24% 15%;
    --muted-foreground: 180 50% 60%;
    --accent: 320 100% 60%;
    --accent-foreground: 0 0% 98%;
    --border: 251 24% 20%;
    --input: 251 24% 15%;
    --ring: 180 100% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-x-hidden;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  }

  /* Glassmorphism utilities */
  .glass {
    background: hsl(var(--glass-bg));
    backdrop-filter: blur(20px);
    border: 1px solid hsl(var(--glass-border));
    box-shadow: var(--shadow-glass);
  }

  .glass-card {
    @apply glass rounded-2xl p-6 transition-all duration-300;
  }

  .glass-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-glass), var(--shadow-glow);
  }

  /* Neon glow effects */
  .neon-glow {
    box-shadow: 0 0 20px hsl(var(--neon-glow) / 0.6);
  }

  .neon-glow-secondary {
    box-shadow: 0 0 20px hsl(var(--neon-secondary) / 0.6);
  }

  .neon-glow-accent {
    box-shadow: 0 0 20px hsl(var(--neon-accent) / 0.6);
  }

  /* Gaming animations */
  .bounce-in {
    animation: bounceIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }

  .slide-up {
    animation: slideUp 0.5s ease-out;
  }

  .fade-in-scale {
    animation: fadeInScale 0.4s ease-out;
  }

  /* Custom gaming scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--muted));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, hsl(var(--primary)), hsl(var(--accent)));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, hsl(var(--primary)), hsl(var(--secondary)));
  }
}

/* Gaming keyframe animations */
@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3) translateY(30px);
  }
  50% {
    opacity: 1;
    transform: scale(1.05) translateY(-10px);
  }
  70% {
    transform: scale(0.95) translateY(5px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes pulseGlow {
  0%, 100% {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.4);
  }
  50% {
    box-shadow: 0 0 30px hsl(var(--primary) / 0.8);
  }
}

@keyframes slideUp {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInScale {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes correctAnswer {
  0% {
    background: hsl(var(--success) / 0.1);
    box-shadow: 0 0 0 hsl(var(--success) / 0.4);
  }
  50% {
    background: hsl(var(--success) / 0.3);
    box-shadow: 0 0 20px hsl(var(--success) / 0.8);
  }
  100% {
    background: hsl(var(--success) / 0.1);
    box-shadow: 0 0 0 hsl(var(--success) / 0.4);
  }
}

@keyframes wrongAnswer {
  0% {
    background: hsl(var(--destructive) / 0.1);
    transform: translateX(0);
  }
  25% {
    background: hsl(var(--destructive) / 0.3);
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
  100% {
    background: hsl(var(--destructive) / 0.1);
    transform: translateX(0);
  }
}

/* Particle background for extra gaming feel */
.particles-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

.particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background: hsl(var(--primary));
  border-radius: 50%;
  opacity: 0.6;
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
    opacity: 0.6;
  }
  50% {
    transform: translateY(-20px) rotate(180deg);
    opacity: 1;
  }
}